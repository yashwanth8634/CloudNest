<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>My Files - CloudNest</title>
    <meta name="description" content="Your personal file dashboard on CloudNest.">
    <meta property="og:image" content="/favicon.ico">
    <meta property="og:title" content="My Files - CloudNest">
    <meta property="og:description" content="Your personal file dashboard on CloudNest.">
    <meta property="og:type" content="website">
    <meta name="twitter:card" content="summary">
    <link rel="icon" href="/favicon.ico" type="image/x-icon">

    <!-- Gilroy Font -->
    <link href="https://fonts.cdnfonts.com/css/gilroy-bold" rel="stylesheet" />
    <link
    href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    rel="stylesheet"
/>

    <!-- Tailwind -->
    <script src="https://cdn.tailwindcss.com"></script>

    <style>
      body {
        font-family: "Gilroy-Bold", sans-serif;
      }
      .gradient-text {
        background: linear-gradient(90deg, #6366f1, #8b5cf6, #ec4899);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
      }
    </style>
  </head>
  <body
    class="bg-gradient-to-br from-indigo-50 via-white to-purple-50 min-h-screen flex flex-col"
  >
    <!-- Header -->
    <header class="bg-white/80 backdrop-blur-md shadow-sm sticky top-0 z-10">
      <div
        class="container mx-auto px-6 py-3 flex justify-between items-center"
      >
        <a href="/home" class="flex items-center">
          <img src="/favicon.ico" alt="CloudNest Logo" class="h-10 w-20">
          <span class="text-2xl font-extrabold tracking-wide gradient-text">CloudNest</span>
        </a>
        <div class="flex items-center space-x-4">
          <form
            action="/upload"
            method="POST"
            enctype="multipart/form-data"
            class="hidden"
            id="uploadForm"
          >
            <input
              type="file"
              name="file"
              id="file"
              onchange="document.getElementById('uploadForm').submit()"
            />
          </form>

          <button
            onclick="document.getElementById('file').click()"
            class="bg-indigo-600 text-white px-4 py-2 rounded-lg shadow hover:bg-indigo-700 transition"
          >
            Upload File
          </button>

          <!-- User Profile Dropdown -->
          <div class="relative">
            <button
              onclick="toggleDropdown()"
              class="w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center text-indigo-700 font-bold text-lg hover:bg-indigo-200 transition"
            >
              <%= user.username.charAt(0).toUpperCase() %>
            </button>
            <div
              id="user-dropdown"
              class="absolute right-0 mt-2 w-72 bg-white rounded-xl shadow-xl p-5 hidden"
            >
              <h3 class="font-bold text-lg text-gray-800 border-b pb-2 mb-3">
                User Profile
              </h3>
              <div class="space-y-2 text-sm text-gray-700">
                <p><strong>Username:</strong> <span id="stats-username"><%= user.username %></span></p>
                <p><strong>Email:</strong> <span id="stats-email"><%= user.email %></span></p>
                <p><strong>Files Uploaded:</strong> <span id="stats-file-count"><%= files.length %></span></p>
                <p><strong>Storage:</strong> 
                  <span id="stats-used-mb"><%= usedMB %></span> MB / <span id="stats-total-mb"><%= totalMB %></span> MB
                </p>
                <div class="w-full bg-gray-200 rounded-full h-2 mt-1" id="stats-progress-container">
                  <div class="bg-indigo-600 h-2 rounded-full" style="width: 0%"></div>
                </div>
              </div>
              <div class="border-t mt-4 pt-4">
                <a
                  href="/user/logout"
                  class="block w-full text-center px-4 py-2 text-sm text-red-600 font-semibold rounded-lg hover:bg-red-50 transition-all"
                  >Log Out</a
                >
              </div>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="flex-1 container mx-auto px-6 py-10">
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-xl font-semibold text-gray-800">Uploaded Files</h2>
        <!-- The form is no longer needed for search, but we keep the input -->
        <div class="w-full md:w-1/3">
          <div class="relative">
            <input
              type="text"
              name="search"
              id="searchInput"
              placeholder="Search files..."
              class="w-full pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
            />
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <i class="ri-search-line text-gray-400"></i>
            </div>
          </div>
        </div>
      </div>

      <% if (uploadSuccess) { %>
        <div class="auto-dismiss-alert bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-lg mb-6" role="alert">
          <div class="flex">
            <div class="py-1"><svg class="fill-current h-6 w-6 text-green-500 mr-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zM10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm3.7-9.3a1 1 0 0 0-1.4-1.4L9 10.6l-1.3-1.3a1 1 0 0 0-1.4 1.4l2 2a1 1 0 0 0 1.4 0l4-4z"/></svg></div>
            <div>
              <p class="font-bold">Success</p>
              <p class="text-sm">File uploaded successfully!</p>
            </div>
            <button onclick="this.parentElement.parentElement.style.display='none';" class="ml-auto -mx-1.5 -my-1.5 bg-green-100 text-green-500 rounded-lg focus:ring-2 focus:ring-green-400 p-1.5 hover:bg-green-200 inline-flex h-8 w-8" aria-label="Dismiss">
              <span class="sr-only">Dismiss</span>
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </button>
          </div>
        </div>
      <% } %>

      <% if (uploadError === 'storage_full') { %>
        <div class="auto-dismiss-alert bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg mb-6" role="alert">
          <div class="flex">
            <div class="py-1"><svg class="fill-current h-6 w-6 text-red-500 mr-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zM10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-1-5a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-1-9a1 1 0 0 1 1-1h2a1 1 0 1 1 0 2h-2a1 1 0 0 1-1-1z"/></svg></div>
            <div>
              <p class="font-bold">Upload Failed</p>
              <p class="text-sm">Storage limit exceeded. You do not have enough space to upload this file.</p>
            </div>
            <button onclick="this.parentElement.parentElement.style.display='none';" class="ml-auto -mx-1.5 -my-1.5 bg-red-100 text-red-500 rounded-lg focus:ring-2 focus:ring-red-400 p-1.5 hover:bg-red-200 inline-flex h-8 w-8" aria-label="Dismiss">
              <span class="sr-only">Dismiss</span>
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </button>
          </div>
        </div>
      <% } %>

      <% if (uploadError === 'upload_failed') { %>
        <div class="auto-dismiss-alert bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg mb-6" role="alert">
          <div class="flex">
            <div class="py-1"><svg class="fill-current h-6 w-6 text-red-500 mr-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zM10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-1-5a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-1-9a1 1 0 0 1 1-1h2a1 1 0 1 1 0 2h-2a1 1 0 0 1-1-1z"/></svg></div>
            <div>
              <p class="font-bold">Upload Failed</p>
              <p class="text-sm">An unexpected error occurred. Please try uploading the file again.</p>
            </div>
            <button onclick="this.parentElement.parentElement.style.display='none';" class="ml-auto -mx-1.5 -my-1.5 bg-red-100 text-red-500 rounded-lg focus:ring-2 focus:ring-red-400 p-1.5 hover:bg-red-200 inline-flex h-8 w-8" aria-label="Dismiss">
              <span class="sr-only">Dismiss</span>
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </button>
          </div>
        </div>
      <% } %>

      <!-- This container will be updated dynamically by JavaScript -->
      <div id="file-list-container">
      <% if (files && files.length > 0) { %>
      <div
        class="bg-white/80 backdrop-blur-sm shadow-lg rounded-xl overflow-hidden"
      >
        <ul class="divide-y divide-gray-200">
          <% files.forEach(file => { %>
          <li
            class="flex justify-between items-center p-4 hover:bg-gray-50 transition"
          >
            <div class="flex items-center space-x-3">
              <% if (file.mimetype.startsWith('image/')) { %>
                <img src="/download/<%= file.path %>" alt="<%= file.originalName %>" class="w-10 h-10 object-cover rounded-md">
              <% } else { %>
                <div class="w-10 h-10 flex items-center justify-center bg-indigo-100 rounded-md">
                  <svg
                    class="w-6 h-6 text-indigo-500"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    />
                  </svg>
                </div>
              <% } %>
              <div>
                <span class="text-gray-800 font-medium"><%= file.originalName %></span>
                <p class="text-xs text-gray-500">
                  Uploaded on <%= new Date(file.createdAt).toLocaleDateString() %>
                </p>
              </div>
            </div>
            <div class="flex items-center space-x-4">
              <span class="text-sm text-gray-500 font-mono">
                <%= (file.size / (1024 * 1024)).toFixed(2) %> MB
              </span>
              <!-- Download button -->
              <a
                href="/download/<%= file.path %>"
                class="text-indigo-600 hover:text-indigo-800 text-2xl"
                title="Download"
              >
               <i class="ri-download-line"></i>
              </a>
              <!-- Delete Button -->
              <form
                action="/delete/<%= file._id %>"
                method="POST"
                onsubmit="return confirm('Are you sure you want to delete this file?');"
              >
                <button
                  type="submit"
                  class="text-red-500 hover:text-red-700 text-2xl"
                  title="Delete"
                >
                  <i class="ri-delete-bin-line "></i>
                </button>
              </form>
            </div>
          </li>
          <% }) %>
        </ul>
      </div>
      <% } else { %>
        <% if (search) { %>
          <div class="text-center py-12 bg-white/80 backdrop-blur-sm shadow-lg rounded-xl">
            <h3 class="mt-2 text-lg font-medium text-gray-900">No files found for "<%= search %>"</h3>
            <p class="mt-1 text-sm text-gray-500">Try searching for something else or <a href="/home" class="text-indigo-600 hover:underline">clear the search</a>.</p>
          </div>
        <% } else { %>
      <div
        class="text-center py-12 bg-white/80 backdrop-blur-sm shadow-lg rounded-xl"
      >
        <svg
          class="mx-auto h-12 w-12 text-gray-400"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            vector-effect="non-scaling-stroke"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 
                             01-2 2H5a2 2 0 01-2-2z"
          />
        </svg>
        <h3 class="mt-2 text-lg font-medium text-gray-900">
          No files uploaded
        </h3>
        <p class="mt-1 text-sm text-gray-500">
          Get started by uploading your first file.
        </p>
      </div>
      <% } %>
      <% } %>
      </div>
    </main>

    <script>
      function toggleDropdown() {
        const dropdown = document.getElementById("user-dropdown");
        dropdown.classList.toggle("hidden");
      }
      window.onclick = function (event) {
        if (!event.target.closest(".relative")) {
          const dropdown = document.getElementById("user-dropdown");
          if (!dropdown.classList.contains("hidden")) {
            dropdown.classList.add("hidden");
          }
        }
      };

      // Auto-dismiss alerts
      document.addEventListener('DOMContentLoaded', () => {
        const alerts = document.querySelectorAll('.auto-dismiss-alert');
        alerts.forEach(alert => {
          setTimeout(() => {
            // Add a fade-out effect
            alert.style.transition = 'opacity 0.5s ease';
            alert.style.opacity = '0';
            setTimeout(() => {
              alert.style.display = 'none';
            }, 500); // Match transition duration
          }, 5000); // 5 seconds
        });
      });

      // --- Real-time Search Script ---
      const searchInput = document.getElementById('searchInput');
      const fileListContainer = document.getElementById('file-list-container');
      let debounceTimer;

      // Utility to escape HTML to prevent XSS
      function escapeHTML(str) {
        const p = document.createElement('p');
        p.textContent = str;
        return p.innerHTML;
      }

      function updateStats(stats) {
  if (!stats) return;

  document.getElementById('stats-file-count').textContent = stats.fileCount;
  document.getElementById('stats-used-mb').textContent = stats.usedMB;

  const progressBar = document.querySelector('#stats-progress-container > div');
  if (progressBar) {
    progressBar.style.width = `${stats.percent || 0}%`;
  }
}


      function renderFileList(files, searchTerm) {
        if (!files) {
            fileListContainer.innerHTML = `<p class="text-center text-red-500">Error loading files.</p>`;
            return;
        }

        if (files.length === 0) {
            if (searchTerm) {
                 fileListContainer.innerHTML = `
                    <div class="text-center py-12 bg-white/80 backdrop-blur-sm shadow-lg rounded-xl">
                        <h3 class="mt-2 text-lg font-medium text-gray-900">No files found for "${escapeHTML(searchTerm)}"</h3>
                        <p class="mt-1 text-sm text-gray-500">Try searching for something else.</p>
                    </div>`;
            } else {
                fileListContainer.innerHTML = `
                    <div class="text-center py-12 bg-white/80 backdrop-blur-sm shadow-lg rounded-xl">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                        </svg>
                        <h3 class="mt-2 text-lg font-medium text-gray-900">No files uploaded</h3>
                        <p class="mt-1 text-sm text-gray-500">Get started by uploading your first file.</p>
                    </div>`;
            }
            return;
        }

        const fileItemsHTML = files.map(file => {
            const isImage = file.mimetype.startsWith('image/');
            const iconOrPreview = isImage 
                ? `<img src="/download/${file.path}" alt="${escapeHTML(file.originalName)}" class="w-10 h-10 object-cover rounded-md">`
                : `<div class="w-10 h-10 flex items-center justify-center bg-indigo-100 rounded-md">
                      <svg class="w-6 h-6 text-indigo-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                      </svg>
                   </div>`;

            return `
                <li class="flex justify-between items-center p-4 hover:bg-gray-50 transition">
                    <div class="flex items-center space-x-3">
                        ${iconOrPreview}
                        <div>
                            <span class="text-gray-800 font-medium">${escapeHTML(file.originalName)}</span>
                            <p class="text-xs text-gray-500">
                                Uploaded on ${new Date(file.createdAt).toLocaleDateString()}
                            </p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-500 font-mono">
                            ${(file.size / (1024 * 1024)).toFixed(2)} MB
                        </span>
                        <a href="/download/${file.path}" class="text-indigo-600 hover:text-indigo-800 text-2xl" title="Download">
                           <i class="ri-download-line"></i>
                        </a>
                        <form action="/delete/${file._id}" method="POST" onsubmit="return confirm('Are you sure you want to delete this file?');">
                            <button type="submit" class="text-red-500 hover:text-red-700 text-2xl" title="Delete">
                                <i class="ri-delete-bin-line "></i>
                            </button>
                        </form>
                    </div>
                </li>`;
        }).join('');

        fileListContainer.innerHTML = `
            <div class="bg-white/80 backdrop-blur-sm shadow-lg rounded-xl overflow-hidden">
                <ul class="divide-y divide-gray-200">${fileItemsHTML}</ul>
            </div>`;
      }

      searchInput.addEventListener('input', (e) => {
        const searchTerm = e.target.value;

        // Clear the previous timer
        clearTimeout(debounceTimer);

        // Set a new timer
        debounceTimer = setTimeout(() => {
            fetch(`/api/files?search=${encodeURIComponent(searchTerm)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    renderFileList(data.files, searchTerm);
                    updateStats(data.stats);
                })
                .catch(error => {
                    console.error('Error fetching files:', error);
                    fileListContainer.innerHTML = `<p class="text-center text-red-500">Could not fetch files. Please try again later.</p>`;
                });
        }, 300); // 300ms debounce delay
      });
    </script>
  </body>
</html>
